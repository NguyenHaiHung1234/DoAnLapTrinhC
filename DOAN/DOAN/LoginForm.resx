<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        daQhCEIQhPqUvK/kv//Z
</value>
  </data>
</root>